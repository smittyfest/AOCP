1. [10] The text showed how to interchange the values of variables m and n, using the replacement notation,
by setting t ← m, m ← n, n ← t. Show how the values of four variables (a, b, c, d) can be rearranged
to (b, c, d, a) by a sequence of replacements. In other words, the new value of a is to be the original
value of b, etc. Try to use the minimum number of replacements.

Solution: The procedure requires 8 operations, consisting of assigning the original values
to four temporary variables, followed by the four value re-assignment operations:

t ← a   # 1
u ← b   # 2
v ← c   # 3
x ← d   # 4

a ← u   # 5
b ← v   # 6
c ← x   # 7
d ← t   # 8

2. [15] Prove that m is always greater than n at the beginning of step E1, except possibly the first
time this step occurs.

Proof: Assume m and n are positive integers. In the case where the input value of m is less than the
input value of n, the remainder r of m / n will simply be m, thus in step E3 the new value of m will be
the original value of n, and the new value of n will be r, which is the original value of m.
Thus the values of m and n swap in this case. 
For each iteration forward, m / n will result in a remainder r that must be lessthan n.
Using a proof by contradiction, assume the remainder r of m / n is greater than or equal to n:
this would be impossible, because if this were the case, we could simply divide this remainder
by n again and again until we reveal a remainder that is smaller than n.
So knowing we will always be able to achieve a remainder r that is smaller than n when dividing m / n,
we can show that in step E3, the new value of m will be the original value of n, while the new value of n
will be this remainder value r,so we have m > n => n > r => m > n.
Thus m is always greater than n at the beginning of step E1.

3. [20] Change Euclid's Algorithm "Algorithm E" (for the sake of efficiency) so that all trivial
replacement operations such as m ← n are avoided. Write this new algorithm in the style of Algorithm E,
and call it Algorithm F.

Solution: we can implement Algorithm F recursively, so that there are now variable substitutions as such:

Algorithm F (Euclid's Algorithm-no variable substitutions). Given two positive integers m and n,
find their greatest common divisor, that is, the largest positive integer that evenly divides both m and n.

F1. [Is n zero?] If n = 0, the algorithm terminates; m is the answer.
F2. [Recursive call] Call the algorithm with the values n and m % n directly instead of storing
these values in separate variables.

4. [16] What is the greatest common divisor of 2166 and 6099?

Solution: Using Algorithm E (Euclid's Algorithm), we have

m = 6099, n = 2166, r = 6099 % 2166 = 1767
m = 2166, n = 1767, r = 2166 % 1767 = 399
m = 1767, n = 399, r = 1767 % 399 = 171
m = 399, n = 171, r = 399 % 171 = 57
m = 171, n = 57, r = 171 % 57 = 0

Thus, the greatest common divisor of 2166 and 6099 is 57.

5. [12] Show that the "Procedure for Reading This Set of Books" that appears after the preface
actually fails to be a genuine algorithm on at least three of our five counts!
Also mention some differences in format between it and Algorithm E.

Solution: Of our five criteria for what constitutes a genuine algorithm
(Finiteness, Definiteness, Input, Output, Effectiveness), the "Procedure for
Reading This Set of Books" fails to achieve Finiteness, Definiteness, Output,
and Effectiveness.

Finiteness - An algorithm must terminate in a finite number of steps. This procedure lacks finiteness because there is no clear terminating state, as the reader is told to proceed back to step 3 and re-read the book after they have finished reading and working through all of the exercises in the book. This loop iterates forever.

Definiteness - Each step of an algorithm must be precisely defined. This procedure lacks definiteness because several steps are ambiguous. Steps with language like "Is the subject of the chapter interesting to you?", "Are you mathematically inclined?", and "Relax" are not defined in a definite fashion.

Output - An algorithm has one or more outputs, or quantities with a specified relation to the input. If we assume the book is the input, we would expect an algorithm to have a concrete set of output related in some way to the input. We could imagine the output being the benefits a reader may gain from studying the book, but this is highly subjective and open to interpretation. Therefore, this
procedure does not have a clear output.

Effectiveness - Each step of an algorithm is expected to be performed in an exact fashion in a finite period of time. Since one could expect to take an indefinite amount of time to complete their study of this book, and also because many of the steps are ambiguous and subjective, this procedure lacks Effectiveness.

6. m[20] What is T₅, the average number of times step E1 is performed when n = 5?

Solution:
